// Импортируем данные о главах из steps.jsx
import steps from '../steps';

// Информационный контент для каждой главы
const infoContentData = {
  1: {
    title: "Глава 1: Начало истории",
    content: [
      {
        type: "paragraph",
        text: "Первая глава рассказывает о ранних событиях, которые привели к формированию исторического периода."
      },
      {
        type: "paragraph",
        text: "Важно понимать контекст, в котором происходили эти события, и их влияние на дальнейшее развитие."
      },
      {
        type: "list",
        items: [
          "Ключевые даты и события",
          "Важные исторические личности",
          "Причины и предпосылки"
        ]
      }
    ]
  },
  2: {
    title: "Глава 2: Развитие событий",
    content: [
      {
        type: "paragraph",
        text: "Вторая глава освещает основной период развития и трансформации исторических процессов."
      },
      {
        type: "list",
        items: [
          "Социальные изменения",
          "Политические преобразования",
          "Культурные аспекты"
        ]
      }
    ]
  },
  3: {
    title: "Глава 3: Переломный момент",
    content: [
      {
        type: "paragraph",
        text: "Третья глава посвящена ключевому моменту в истории, который изменил дальнейший ход событий."
      },
      {
        type: "paragraph",
        text: "Этот период характеризуется значительными трансформациями и принятием важных решений."
      }
    ]
  },
  4: {
    title: "Глава 4: Последствия",
    content: [
      {
        type: "paragraph",
        text: "Четвертая глава анализирует последствия предыдущих событий и их влияние на исторический процесс."
      },
      {
        type: "list",
        items: [
          "Непосредственные результаты",
          "Долгосрочные эффекты",
          "Альтернативные сценарии"
        ]
      }
    ]
  },
  5: {
    title: "Глава 5: Современный контекст",
    content: [
      {
        type: "paragraph",
        text: "Заключительная глава связывает исторические события с современностью и оценивает их влияние на нынешний мир."
      },
      {
        type: "paragraph",
        text: "Особое внимание уделяется тому, как прошлое продолжает формировать настоящее и будущее."
      }
    ]
  }
};

// Карточный контент для главы с картой
const mapContentData = {
  3: {
    title: "Карта глава 3: Ключевые локации",
    imageSrc: "/assets/media/map_ch3.jpg",
    points: [
      {
        id: 1,
        x: 25, // процент от ширины изображения
        y: 30, // процент от высоты изображения
        title: "Локация 1",
        description: "Важная историческая локация, где происходили ключевые события."
      },
      {
        id: 2,
        x: 65,
        y: 45,
        title: "Локация 2",
        description: "Стратегический пункт с богатой историей и значимыми артефактами."
      },
      {
        id: 3,
        x: 40,
        y: 70,
        title: "Локация 3",
        description: "Место знаменитого сражения, определившего ход истории."
      }
    ]
  }
};

/**
 * Проверяет, доступен ли информационный контент для указанной главы
 * @param {string|number} chapterId - Идентификатор главы
 * @returns {boolean} - true, если информационный контент доступен
 */
export const hasInfoContent = (chapterId) => {
  // Находим главу по ID
  const chapter = steps.find(step =>
    step.id === chapterId || step.id === `chapter${chapterId}`
  );

  // Проверяем наличие информационного контента
  return chapter?.infoContent?.hasInfo || false;
};

/**
 * Проверяет, доступен ли контент с картой для указанной главы
 * @param {string|number} chapterId - Идентификатор главы
 * @returns {boolean} - true, если контент с картой доступен
 */
export const hasMapContent = (chapterId) => {
  // Находим главу по ID
  const chapter = steps.find(step =>
    step.id === chapterId || step.id === `chapter${chapterId}`
  );

  // Проверяем наличие контента с картой
  return chapter?.infoContent?.hasMap || false;
};

/**
 * Возвращает информационный контент для указанной главы
 * @param {number} chapterId - Идентификатор главы
 * @returns {Object|null} - Объект с информационным контентом или null, если контент не найден
 */
export const getInfoContent = (chapterId) => {
  return infoContentData[Number(chapterId)] || null;
};

/**
 * Возвращает контент с картой для указанной главы
 * @param {number} chapterId - Идентификатор главы
 * @returns {Object|null} - Объект с контентом карты или null, если контент не найден
 */
export const getMapContent = (chapterId) => {
  return mapContentData[Number(chapterId)] || null;
};
